version: '3.1'
services:
  # Use postgres/example as credentials
  db:
    build: src/server/db
    restart: always
    environment:
      POSTGRES_PASSWORD: example

  ws:
    build:
      context: .
      dockerfile: src/server/ws/Dockerfile
    env_file:
      - src/server/common/dbClient.env
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.entrypoints=websecure
      # This rule must be longer than the rule for code-dev, including the cookie test.
      - traefik.http.routers.auth.rule=PathPrefix(`/auth/`) && PathPrefix(`/auth/`) && PathPrefix(`/auth/`)
      - traefik.http.routers.auth.tls.certresolver=lets-encrypt
      - traefik.http.routers.auth.tls.domains[0].main=${serviceHostname}
      - traefik.http.services.auth.loadbalancer.server.port=80

  code-dev:
    build:
      context: .
      dockerfile: src/server/code-dev/Dockerfile
    volumes:
      - ./src:/gambit/src:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.code-dev.entrypoints=websecure
      - traefik.http.routers.code-dev.rule=PathPrefix(`/`) && HeadersRegexp(`Cookie`, `code=dev`)
      - traefik.http.routers.code-dev.tls.certresolver=lets-encrypt
      - traefik.http.routers.code-dev.tls.domains[0].main=${serviceHostname}
      - traefik.http.routers.code-dev.service=code-dev
      - traefik.http.services.code-dev.loadbalancer.server.port=80
      - traefik.http.routers.code-dev-hmr.entrypoints=code-dev-hmr
      - traefik.http.routers.code-dev-hmr.rule=PathPrefix(`/`)
      - traefik.http.routers.code-dev-hmr.service=code-dev-hmr
      - traefik.http.services.code-dev-hmr.loadbalancer.server.port=81

  code-prod:
    build:
      context: .
      dockerfile: src/server/code-prod/Dockerfile
    labels:
      - traefik.enable=true
      - traefik.http.routers.code-prod.entrypoints=websecure
      - traefik.http.routers.code-prod.rule=PathPrefix(`/`)
      - traefik.http.routers.code-prod.tls.certresolver=lets-encrypt
      - traefik.http.routers.code-prod.tls.domains[0].main=${serviceHostname}
      - traefik.http.routers.code-prod.service=code-prod
      - traefik.http.services.code-prod.loadbalancer.server.port=80

  traefik:
    image: traefik:2.4.5
    restart: always
    ports:
      - '81:81' # parcel-hmr (hot module reloading)
      - '8080:8080' # traefik dashboard
      - '443:443' # real traffic
    volumes:
      - ./src/server/traefik-${clusterType}:/etc/traefik:ro
      - ./data/server/traefik:/data/traefik:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  populateStore:
    build:
      context: .
      dockerfile: src/server/populateStore/Dockerfile
    image: populate-store
    env_file:
      - src/server/common/dbClient.env
    depends_on:
      - db
